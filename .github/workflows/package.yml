name: Package

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Linux:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-16.04]

    steps:
    - name: Install dependencies
      run: sudo apt-get install -y qtbase5-dev libglu1-mesa-dev

    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=installed ${{github.workspace}}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Install
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --target install

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Plater-Linux-${{github.sha}}
        path: ${{github.workspace}}/build/installed

  Windows:
    runs-on: windows-latest

    steps:
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
         mirror: 'http://ftp.jaist.ac.jp/pub/qtproject/'
         # mirror: 'http://mirrors.ocf.berkeley.edu/qt/'
         arch: win64_msvc2019_64
         modules: all

    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=installed ${{github.workspace}}

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Install
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --target install

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Plater-Linux-${{github.sha}}
        path: ${{github.workspace}}/build/installed
