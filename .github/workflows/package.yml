name: Package

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Linux:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-16.04]

    steps:
    - name: Install dependencies
      run: sudo apt-get install -y qtbase5-dev libglu1-mesa-dev

    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=Plater-Linux-${{github.sha}} $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Install
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --target install

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Plater-Linux-${{github.sha}}
        path: ${{github.workspace}}/build/Plater-Linux-${{github.sha}}

  Windows:
    runs-on: windows-latest

    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows-static
      buildDir: '${{ github.workspace }}/build/'

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Restore artifacts, or setup vcpkg (do not install any package)
      uses: lukka/run-vcpkg@v6
      with:
        setupOnly: true
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        # Since the cache must be invalidated when content of the vcpkg.json
        # file changes, let's compute its hash and append this to the computed
        # cache's key.
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        vcpkgTriplet: ${{ env.VCPKG_DEFAULT_TRIPLET }}
        # Ensure the vcpkg artifacts are cached, they are generated in the
        # 'CMAKE_BINARY_DIR/vcpkg_installed' directory.
        additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@main
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildDirectory: '${{ env.buildDir }}'
        cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=installed -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_DEFAULT_TRIPLET }}'
        buildWithCMake: true

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Plater-Windows-${{github.sha}}
        path: ${{ env.buildDir }}/Plater-Windows-${{github.sha}}
